# Development Dockerfile for tcode (builds from local source)
FROM node:22-alpine AS builder

WORKDIR /app

# Install build dependencies for native modules (node-pty)
RUN apk add --no-cache python3 make g++

# Copy package.json files for dependency caching
COPY package.json package-lock.json ./
COPY packages/shared/package.json ./packages/shared/
COPY packages/server/package.json ./packages/server/
COPY packages/standalone/package.json ./packages/standalone/
COPY apps/web-client/package.json ./apps/web-client/

# Install all dependencies for building
RUN npm ci

# Copy source code
COPY . .

# Build all packages
RUN npm run build --workspaces --if-present

# Production stage
FROM node:22-alpine AS runtime

WORKDIR /app

# Install runtime dependencies for native modules (node-pty)
RUN apk add --no-cache python3 make g++

# Set default port (can be overridden)
ENV PORT=3000

# Copy the entire workspace structure to maintain internal dependencies
COPY --from=builder /app/package.json ./
COPY --from=builder /app/package-lock.json ./
COPY --from=builder /app/packages ./packages

# Install production dependencies for the workspace
RUN npm ci --omit=dev

# Expose the port
EXPOSE 3000

# Run the standalone server directly
CMD ["node", "packages/standalone/dist/server.js"]